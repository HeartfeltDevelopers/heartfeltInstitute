# Generated by Django 4.2.5 on 2023-09-10 06:19

import accounts.utilities
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('lecturer', 'Lecturer'), ('student', 'Student'), ('alumni', 'Alumni'), ('partner', 'Partner')], default='student', max_length=20)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('church_name', models.CharField(max_length=256)),
                ('nationality', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('present', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partnership_type', models.CharField(choices=[('money', 'Money'), ('food', 'Food'), ('items', 'Physical Items')], max_length=10)),
                ('partner_id', models.CharField(default=accounts.utilities.generate_partner_number, max_length=25)),
                ('partnership_date', models.DateField()),
                ('total_partnership_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('food_items', models.TextField(blank=True, null=True)),
                ('physical_items', models.TextField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('payment_method', models.CharField(choices=[('Credit Card', 'Credit Card'), ('Bank Transfer', 'Bank Transfer'), ('Check', 'Check')], max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Partners',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(default='HIM-LEC-676259', max_length=10, unique=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('qualification', models.CharField(max_length=50)),
                ('specialization', models.CharField(max_length=100)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('degrees_earned', models.TextField()),
                ('institutions_attended', models.TextField()),
                ('graduation_years', models.TextField()),
                ('teaching_experience_years', models.PositiveIntegerField()),
                ('previous_institutions', models.TextField()),
                ('certifications', models.TextField()),
                ('course_management', models.TextField()),
                ('classroom_management', models.TextField()),
                ('assessment_evaluation', models.TextField()),
                ('student_support', models.TextField()),
                ('research_development', models.TextField()),
                ('administrative_tasks', models.TextField()),
                ('emergency_contact_name', models.CharField(max_length=50)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('languages_spoken', models.TextField(blank=True, null=True)),
                ('research_interests', models.TextField(blank=True, null=True)),
                ('publications', models.TextField(blank=True, null=True)),
                ('hobbies', models.TextField(blank=True, null=True)),
                ('interests', models.TextField(blank=True, null=True)),
                ('date_created', models.DateField(blank=True, null=True)),
                ('date_updated', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Aluminum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('student_id', models.CharField(default='HIM-87732166-2023', max_length=25)),
                ('id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('enrolled_date', models.DateField()),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('current_year', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('major', models.CharField(max_length=50)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(max_length=50)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('parent_full_name', models.CharField(max_length=100)),
                ('parent_contact_phone', models.CharField(max_length=15)),
                ('parent_contact_email', models.EmailField(max_length=254)),
                ('nationality', models.CharField(max_length=50)),
                ('languages_spoken', models.TextField(blank=True, null=True)),
                ('hobbies', models.TextField(blank=True, null=True)),
                ('interests', models.TextField(blank=True, null=True)),
                ('attendance_records', models.ManyToManyField(to='accounts.attendancerecord')),
            ],
        ),
    ]
